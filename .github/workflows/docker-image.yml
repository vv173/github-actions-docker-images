name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
#   pull_request:
#     branches: [ "main" ]

env:
  SCAN_TAG: zad2:v0.0.1
  PRODUCTION_TAG: zad2:v0.0.1
  GITHUB_REGISTRY: ghcr.io

jobs:

  build-scan-push:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and export to Docker
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        load: true
        tags: ${{ env.SCAN_TAG }}
        cache-from: type=registry,ref=${{ env.GITHUB_REGISTRY }}/${{ env.PRODUCTION_TAG }}
        cache-to: type=inline

    - name: Run Snyk to check Docker image for vulnerabilities
      continue-on-error: true
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: ${{ env.SCAN_TAG }}
        args: --file=Dockerfile --sarif-file-output=snyk.sarif

    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: snyk.sarif

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        platforms: linux/arm64,linux/amd64 
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ env.GITHUB_REGISTRY }}/${{ env.PRODUCTION_TAG }}
        cache-from: type=registry,ref=${{ env.GITHUB_REGISTRY }}/${{ github.actor }}/${{ env.PRODUCTION_TAG }}
        cache-to: type=inline